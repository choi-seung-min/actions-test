name: Issue Automation

on:
  issues:
    types: [opened]
  pull_request:
    types: [closed]

jobs:
  create-branch:
    if: github.event_name == 'issues' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install Python dependencies
        run: pip install unicodedata2

      - name: Clone repo and create branch
        run: |
          git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} repo
          cd repo

          ISSUE_NUMBER=${{ github.event.issue.number }}
          ISSUE_TITLE="${{ github.event.issue.title }}"

          SLUG=$(python3 -c "import re, unicodedata2; title='''$ISSUE_TITLE'''; title=unicodedata2.normalize('NFC', title); title=re.sub(r'[^\w가-힣ㄱ-ㅎㅏ-ㅣ\s-]', '', title); title=re.sub(r'\s+', '-', title.strip()); print(title[:50])")

          BRANCH_NAME="issue-${ISSUE_NUMBER}-${SLUG}"
          echo "브랜치 이름: $BRANCH_NAME"

          git fetch origin develop
          git checkout -b "$BRANCH_NAME" origin/develop
          git push origin "$BRANCH_NAME"

  close-issue-and-delete-branch:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Extract issue number and branch name
        id: extract
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          ISSUE_NUMBER=$(echo "$BRANCH_NAME" | grep -oP '(?<=issue-)\d+')
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Close linked issue
        uses: peter-evans/close-issue@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.extract.outputs.issue_number }}
          comment: false
          close-reason: completed

      - name: Delete merged branch (if not main or develop)
        run: |
          BRANCH_NAME="${{ steps.extract.outputs.branch_name }}"
          if [[ "$BRANCH_NAME" != "main" && "$BRANCH_NAME" != "develop" ]]; then
            echo "Deleting branch: $BRANCH_NAME"
            curl -X DELETE \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/git/refs/heads/$BRANCH_NAME
          else
            echo "Branch $BRANCH_NAME is protected and will not be deleted."
          fi
